"""
Django settings for nomad project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/
# load .env
load_dotenv()
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    'STR_SECRET_KEY',
    'd3v3l0pm3nt53cr3tk3yn0t53cur3@t@11n3v3ru53!npr0duct!0n3v3r!!!'
)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv(
    'BOOL_ENABLE_DEBUG',
    'True'
).title() == 'True'
ALLOWED_HOSTS = os.getenv(
    'CSV_ALLOWED_HOSTS',
    '*'
).split(',')
# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'knox',
    'nomad.apps.NomadConfig',
    'rest_framework'
)
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
    )
}
KNOX_TOKEN_MODEL = 'knox.AuthToken'
MIDDLEWARE = (
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
)
ROOT_URLCONF = 'nomad.urls'
TEMPLATES = (
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (
            os.path.join(
                BASE_DIR,
                'nomad/templates'
            ),
        ),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': (
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            )
        }
    },
)
WSGI_APPLICATION = 'nomad.wsgi.application'
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv(
            'STR_SQL_DB_NAME',
            'nomad'
        ),
        'USER': os.getenv(
            'STR_SQL_DB_USER',
            'postgres'
        ),
        'PASSWORD': os.getenv(
            'STR_SQL_DB_PW',
            ''
        ),
        'HOST': os.getenv(
            'STR_SQL_DB_HOST',
            'localhost'
        ),
        'PORT': os.getenv(
            'INT_SQL_DB_PORT',
            '5432'
        ),
        'OPTIONS': {
            'sslmode': 'prefer'
        }
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = ({
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
}, {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'
}, {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'
}, {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'
})
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = 'static/'
STATICFILES_DIRS = (
    os.path.join(
        BASE_DIR,
        'nomad/static'
    ),
)
STATIC_ROOT = '/usr/share/nginx/html/static'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# MinIO config
MINIO_ACCESS_KEY = os.getenv(
  'STR_MINIO_ACCESS_KEY',
  ''
)
MINIO_SECRET_KEY = os.getenv(
  'STR_MINIO_SECRET_KEY',
  ''
)
MINIO_ENDPOINT = os.getenv(
  'STR_MINIO_ENDPOINT',
  'localhost:9000'
)
MINIO_BUCKET_NAME = os.getenv(
  'STR_MINIO_BUCKET_NAME',
  'nomad'
)
MINIO_SECURE = DEBUG is False
